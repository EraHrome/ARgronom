@using ARgronom.Models.ViewModels;
@using System.Security.Claims;
@using ARgronom.Contexts;
@using ARgronom.Models;
@using System.Linq;

@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject Context context

@model List<ArViewModel>

@{
    Layout = null;
    var roleType = Role.None;
    var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
    if (userId != null)
    {
        var role = context.Roles.FirstOrDefault(x => x.UserId == userId);
        if (role != null)
        {
            roleType = role.Role;
        }
    }
}

<html>
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>ARgronom AR mode</title>
    <script src="https://aframe.io/releases/1.0.4/aframe.min.js"></script>
    <script src="https://unpkg.com/aframe-look-at-component@0.8.0/dist/aframe-look-at-component.min.js"></script>
    <script src="https://raw.githack.com/AR-js-org/AR.js/master/aframe/build/aframe-ar-nft.js"></script>
    <script>

        function createAndAppendMarker(latitude, longitude, title) {
            let marker = createMarker(latitude, longitude, title);
			document.querySelector('a-scene').appendChild(marker);
        }

        function createMarker(latitude, longitude, title) {
            let marker = document.createElement('a-text');
            marker.setAttribute('value', title);
		    marker.setAttribute('scale', '3 3 3');
		    marker.setAttribute('look-at', '[gps-camera]');
		    marker.setAttribute('gps-entity-place', `latitude: ${latitude}; longitude: ${longitude};`);
            return marker;
        }

      window.onload = () => {
	  
        @foreach(var arModel in Model)
        {
            <text>
          createAndAppendMarker(@arModel.UserMarker.Latitude, @arModel.UserMarker.Longitude, @arModel.Plant.Title);
            </text>
        }

     }
    </script>
  </head>

  <body style="margin: 0; overflow: hidden;">
    <a-scene
      vr-mode-ui="enabled: false;"
      embedded
      arjs="sourceType: webcam; debugUIEnabled: true;"
    >
      <a-camera gps-camera='gpsMinDistance: 1;' rotation-reader> </a-camera>
    </a-scene>
  </body>
</html>